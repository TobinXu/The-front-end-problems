//查找字符串中是否含有某个字符
//方法一
//indexOf()可返回指定的字符串值在字符串中首次出现的位置，如果没有，返回-1
var str = "abc";
console.log(str.indexOf("abc") != -1);

//方法二 search() 用于检索字符串中指定的字符串，或检索与正则表达式相匹配的子字符串
//如果没有返回-1
var str = "1234";
console.log(str.search("3") != -1);

//方法三 match()可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配
var str = "123";
var reg = RegExp(/3/);
if(str.match(reg)) {
    console.log("成功！");
}
console.log(str.match(reg))  //成功返回[ '3', index: 2, input: '123', groups: undefined ]，  失败返回null


// replace 第一个参数为替换目标，第二个参数为要被替换对象
var str ="Visit Microsoft!";
console.log(str.replace(/Microsoft/,"W3School"));

//返回最后一次字符出现的位置，没有的话返回-1
var str = "The full name of Chian is the Prople's Republic of China.";
console.log(str.lastIndexOf("China"));

// slice()提取字符串的某部分，两个参数 开始和结束
//substring() 类似于 slice()。不同之处在于 substring() 无法接受负的索引。
var str = "Apple, Banana,Mango";
console.log(str.slice(7,13));

// substr()类似于slice，不同之处是第二个参数表示要提取部分的长度
var str = "Apple, Banana,Mango";
console.log(str.substr(7,6))

// 大小写转化 toUpperCase(),toLowerCase()
var str = "Apple, Banana,Mango";
console.log(str.toUpperCase());
console.log(str.toLowerCase());

//连接两个字符串
var text1 = "Hello";
var text2 = "en";
var text3 = text1.concat(" ",text2);
console.log(text3);


//删除字符串两端空白符
var str = "     Hello World!     ";
console.log(str.trim());

//返回字符串中指定位置的字符串
var str = "HELLOWORLD";
console.log(str.charAt(0));

//charCodeAt()返回字符串中指定索引的字符的unicode编码
var str = "HELLOWORLD";
console.log(str.charCodeAt(0));

//将字符串转换为数组
var str = "a,b,c,d,f";
console.log(str.split(",")); //[ 'a', 'b', 'c', 'd', 'f' ]
console.log(str.split(" ")); // [ 'a,b,c,d,f' ]
console.log(str.split("|")); // [ 'a,b,c,d,f' ]

